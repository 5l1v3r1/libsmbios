# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = activateCmosToken$(EXEEXT) createUnitTestFiles$(EXEEXT) \
	disable_console_redir$(EXEEXT) dumpCmos$(EXEEXT) \
	isCmosTokenActive$(EXEEXT) smitest$(EXEEXT) \
	stateByteCtl$(EXEEXT) upBootCtl$(EXEEXT) \
	getPasswordFormat$(EXEEXT) ascii2enUS_scancode$(EXEEXT) \
	probes$(EXEEXT) dellLEDCtl$(EXEEXT)
EXTRA_PROGRAMS = activateCmosTokenS$(EXEEXT) \
	createUnitTestFilesS$(EXEEXT) disable_console_redirS$(EXEEXT) \
	dumpCmosS$(EXEEXT) isCmosTokenActiveS$(EXEEXT) \
	smitestS$(EXEEXT) stateByteCtlS$(EXEEXT) upBootCtlS$(EXEEXT) \
	getPasswordFormatS$(EXEEXT) ascii2enUS_scancodeS$(EXEEXT) \
	probesS$(EXEEXT) dellLEDCtlS$(EXEEXT)
subdir = bin-unsupported
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/build/mkinstalldirs
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_activateCmosToken_OBJECTS = getopts.$(OBJEXT) \
	activateCmosToken.$(OBJEXT)
activateCmosToken_OBJECTS = $(am_activateCmosToken_OBJECTS)
activateCmosToken_LDADD = $(LDADD)
am_activateCmosTokenS_OBJECTS = getopts.$(OBJEXT) \
	activateCmosToken.$(OBJEXT)
activateCmosTokenS_OBJECTS = $(am_activateCmosTokenS_OBJECTS)
activateCmosTokenS_LDADD = $(LDADD)
am_ascii2enUS_scancode_OBJECTS = getopts.$(OBJEXT) \
	ascii2enUS_scancode.$(OBJEXT)
ascii2enUS_scancode_OBJECTS = $(am_ascii2enUS_scancode_OBJECTS)
ascii2enUS_scancode_LDADD = $(LDADD)
am_ascii2enUS_scancodeS_OBJECTS = getopts.$(OBJEXT) \
	ascii2enUS_scancode.$(OBJEXT)
ascii2enUS_scancodeS_OBJECTS = $(am_ascii2enUS_scancodeS_OBJECTS)
ascii2enUS_scancodeS_LDADD = $(LDADD)
am_createUnitTestFiles_OBJECTS = getopts.$(OBJEXT) \
	createUnitTestFiles.$(OBJEXT)
createUnitTestFiles_OBJECTS = $(am_createUnitTestFiles_OBJECTS)
createUnitTestFiles_LDADD = $(LDADD)
am_createUnitTestFilesS_OBJECTS = getopts.$(OBJEXT) \
	createUnitTestFiles.$(OBJEXT)
createUnitTestFilesS_OBJECTS = $(am_createUnitTestFilesS_OBJECTS)
createUnitTestFilesS_LDADD = $(LDADD)
am_dellLEDCtl_OBJECTS = getopts.$(OBJEXT) dellLEDCtl.$(OBJEXT)
dellLEDCtl_OBJECTS = $(am_dellLEDCtl_OBJECTS)
dellLEDCtl_LDADD = $(LDADD)
am_dellLEDCtlS_OBJECTS = getopts.$(OBJEXT) dellLEDCtl.$(OBJEXT)
dellLEDCtlS_OBJECTS = $(am_dellLEDCtlS_OBJECTS)
dellLEDCtlS_LDADD = $(LDADD)
am_disable_console_redir_OBJECTS = getopts.$(OBJEXT) \
	disable_console_redir.$(OBJEXT)
disable_console_redir_OBJECTS = $(am_disable_console_redir_OBJECTS)
disable_console_redir_LDADD = $(LDADD)
am_disable_console_redirS_OBJECTS = getopts.$(OBJEXT) \
	disable_console_redir.$(OBJEXT)
disable_console_redirS_OBJECTS = $(am_disable_console_redirS_OBJECTS)
disable_console_redirS_LDADD = $(LDADD)
am_dumpCmos_OBJECTS = getopts.$(OBJEXT) dumpCmos.$(OBJEXT)
dumpCmos_OBJECTS = $(am_dumpCmos_OBJECTS)
dumpCmos_LDADD = $(LDADD)
am_dumpCmosS_OBJECTS = getopts.$(OBJEXT) dumpCmos.$(OBJEXT)
dumpCmosS_OBJECTS = $(am_dumpCmosS_OBJECTS)
dumpCmosS_LDADD = $(LDADD)
am_getPasswordFormat_OBJECTS = getopts.$(OBJEXT) \
	getPasswordFormat.$(OBJEXT)
getPasswordFormat_OBJECTS = $(am_getPasswordFormat_OBJECTS)
getPasswordFormat_LDADD = $(LDADD)
am_getPasswordFormatS_OBJECTS = getopts.$(OBJEXT) \
	getPasswordFormat.$(OBJEXT)
getPasswordFormatS_OBJECTS = $(am_getPasswordFormatS_OBJECTS)
getPasswordFormatS_LDADD = $(LDADD)
am_isCmosTokenActive_OBJECTS = getopts.$(OBJEXT) \
	isCmosTokenActive.$(OBJEXT)
isCmosTokenActive_OBJECTS = $(am_isCmosTokenActive_OBJECTS)
isCmosTokenActive_LDADD = $(LDADD)
am_isCmosTokenActiveS_OBJECTS = getopts.$(OBJEXT) \
	isCmosTokenActive.$(OBJEXT)
isCmosTokenActiveS_OBJECTS = $(am_isCmosTokenActiveS_OBJECTS)
isCmosTokenActiveS_LDADD = $(LDADD)
am_probes_OBJECTS = getopts.$(OBJEXT) probes.$(OBJEXT)
probes_OBJECTS = $(am_probes_OBJECTS)
probes_LDADD = $(LDADD)
am_probesS_OBJECTS = getopts.$(OBJEXT) probes.$(OBJEXT)
probesS_OBJECTS = $(am_probesS_OBJECTS)
probesS_LDADD = $(LDADD)
am_smitest_OBJECTS = getopts.$(OBJEXT) smitest.$(OBJEXT)
smitest_OBJECTS = $(am_smitest_OBJECTS)
smitest_LDADD = $(LDADD)
am_smitestS_OBJECTS = getopts.$(OBJEXT) smitest.$(OBJEXT)
smitestS_OBJECTS = $(am_smitestS_OBJECTS)
smitestS_LDADD = $(LDADD)
am_stateByteCtl_OBJECTS = getopts.$(OBJEXT) stateByteCtl.$(OBJEXT)
stateByteCtl_OBJECTS = $(am_stateByteCtl_OBJECTS)
stateByteCtl_LDADD = $(LDADD)
am_stateByteCtlS_OBJECTS = getopts.$(OBJEXT) stateByteCtl.$(OBJEXT)
stateByteCtlS_OBJECTS = $(am_stateByteCtlS_OBJECTS)
stateByteCtlS_LDADD = $(LDADD)
am_upBootCtl_OBJECTS = getopts.$(OBJEXT) upBootCtl.$(OBJEXT)
upBootCtl_OBJECTS = $(am_upBootCtl_OBJECTS)
upBootCtl_LDADD = $(LDADD)
am_upBootCtlS_OBJECTS = getopts.$(OBJEXT) upBootCtl.$(OBJEXT)
upBootCtlS_OBJECTS = $(am_upBootCtlS_OBJECTS)
upBootCtlS_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(activateCmosToken_SOURCES) $(activateCmosTokenS_SOURCES) \
	$(ascii2enUS_scancode_SOURCES) $(ascii2enUS_scancodeS_SOURCES) \
	$(createUnitTestFiles_SOURCES) $(createUnitTestFilesS_SOURCES) \
	$(dellLEDCtl_SOURCES) $(dellLEDCtlS_SOURCES) \
	$(disable_console_redir_SOURCES) \
	$(disable_console_redirS_SOURCES) $(dumpCmos_SOURCES) \
	$(dumpCmosS_SOURCES) $(getPasswordFormat_SOURCES) \
	$(getPasswordFormatS_SOURCES) $(isCmosTokenActive_SOURCES) \
	$(isCmosTokenActiveS_SOURCES) $(probes_SOURCES) \
	$(probesS_SOURCES) $(smitest_SOURCES) $(smitestS_SOURCES) \
	$(stateByteCtl_SOURCES) $(stateByteCtlS_SOURCES) \
	$(upBootCtl_SOURCES) $(upBootCtlS_SOURCES)
DIST_SOURCES = $(activateCmosToken_SOURCES) \
	$(activateCmosTokenS_SOURCES) $(ascii2enUS_scancode_SOURCES) \
	$(ascii2enUS_scancodeS_SOURCES) $(createUnitTestFiles_SOURCES) \
	$(createUnitTestFilesS_SOURCES) $(dellLEDCtl_SOURCES) \
	$(dellLEDCtlS_SOURCES) $(disable_console_redir_SOURCES) \
	$(disable_console_redirS_SOURCES) $(dumpCmos_SOURCES) \
	$(dumpCmosS_SOURCES) $(getPasswordFormat_SOURCES) \
	$(getPasswordFormatS_SOURCES) $(isCmosTokenActive_SOURCES) \
	$(isCmosTokenActiveS_SOURCES) $(probes_SOURCES) \
	$(probesS_SOURCES) $(smitest_SOURCES) $(smitestS_SOURCES) \
	$(stateByteCtl_SOURCES) $(stateByteCtlS_SOURCES) \
	$(upBootCtl_SOURCES) $(upBootCtlS_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPPUNIT_CFLAGS = @CPPUNIT_CFLAGS@
CPPUNIT_CONFIG = @CPPUNIT_CONFIG@
CPPUNIT_LIBS = @CPPUNIT_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
HAS_DOT_FALSE = @HAS_DOT_FALSE@
HAS_DOT_TRUE = @HAS_DOT_TRUE@
HAS_DOXYGEN_FALSE = @HAS_DOXYGEN_FALSE@
HAS_DOXYGEN_TRUE = @HAS_DOXYGEN_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
CLEANFILES = $(EXTRA_PROGRAMS)
AM_LDFLAGS = -L@top_builddir@/libraries/ -lsmbios
INCLUDES = -I@top_builddir@/include -I@top_srcdir@/include
EXTRA_DIST = getopts.h getopts_LICENSE.txt
activateCmosToken_SOURCES = getopts.c activateCmosToken.cpp
createUnitTestFiles_SOURCES = getopts.c createUnitTestFiles.cpp
disable_console_redir_SOURCES = getopts.c disable_console_redir.cpp
dumpCmos_SOURCES = getopts.c dumpCmos.cpp
isCmosTokenActive_SOURCES = getopts.c isCmosTokenActive.cpp
smitest_SOURCES = getopts.c smitest.cpp
stateByteCtl_SOURCES = getopts.c stateByteCtl.cpp
upBootCtl_SOURCES = getopts.c upBootCtl.cpp
getPasswordFormat_SOURCES = getopts.c getPasswordFormat.cpp
ascii2enUS_scancode_SOURCES = getopts.c ascii2enUS_scancode.cpp
probes_SOURCES = getopts.c probes.cpp
dellLEDCtl_SOURCES = getopts.c dellLEDCtl.cpp

#static 
activateCmosTokenS_SOURCES = getopts.c activateCmosToken.cpp
activateCmosTokenS_LDFLAGS = -all-static
createUnitTestFilesS_SOURCES = getopts.c createUnitTestFiles.cpp
createUnitTestFilesS_LDFLAGS = -all-static
disable_console_redirS_SOURCES = getopts.c disable_console_redir.cpp
disable_console_redirS_LDFLAGS = -all-static
dumpCmosS_SOURCES = getopts.c dumpCmos.cpp
dumpCmosS_LDFLAGS = -all-static
isCmosTokenActiveS_SOURCES = getopts.c isCmosTokenActive.cpp
isCmosTokenActiveS_LDFLAGS = -all-static
smitestS_SOURCES = getopts.c smitest.cpp
smitestS_LDFLAGS = -all-static
stateByteCtlS_SOURCES = getopts.c stateByteCtl.cpp
stateByteCtlS_LDFLAGS = -all-static
upBootCtlS_SOURCES = getopts.c upBootCtl.cpp
upBootCtlS_LDFLAGS = -all-static
getPasswordFormatS_SOURCES = getopts.c getPasswordFormat.cpp
getPasswordFormatS_LDFLAGS = -all-static
ascii2enUS_scancodeS_SOURCES = getopts.c ascii2enUS_scancode.cpp
ascii2enUS_scancodeS_LDFLAGS = -all-static
probesS_SOURCES = getopts.c probes.cpp
probesS_LDFLAGS = -all-static
dellLEDCtlS_SOURCES = getopts.c dellLEDCtl.cpp
dellLEDCtlS_LDFLAGS = -all-static
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  bin-unsupported/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  bin-unsupported/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
activateCmosToken$(EXEEXT): $(activateCmosToken_OBJECTS) $(activateCmosToken_DEPENDENCIES) 
	@rm -f activateCmosToken$(EXEEXT)
	$(CXXLINK) $(activateCmosToken_LDFLAGS) $(activateCmosToken_OBJECTS) $(activateCmosToken_LDADD) $(LIBS)
activateCmosTokenS$(EXEEXT): $(activateCmosTokenS_OBJECTS) $(activateCmosTokenS_DEPENDENCIES) 
	@rm -f activateCmosTokenS$(EXEEXT)
	$(CXXLINK) $(activateCmosTokenS_LDFLAGS) $(activateCmosTokenS_OBJECTS) $(activateCmosTokenS_LDADD) $(LIBS)
ascii2enUS_scancode$(EXEEXT): $(ascii2enUS_scancode_OBJECTS) $(ascii2enUS_scancode_DEPENDENCIES) 
	@rm -f ascii2enUS_scancode$(EXEEXT)
	$(CXXLINK) $(ascii2enUS_scancode_LDFLAGS) $(ascii2enUS_scancode_OBJECTS) $(ascii2enUS_scancode_LDADD) $(LIBS)
ascii2enUS_scancodeS$(EXEEXT): $(ascii2enUS_scancodeS_OBJECTS) $(ascii2enUS_scancodeS_DEPENDENCIES) 
	@rm -f ascii2enUS_scancodeS$(EXEEXT)
	$(CXXLINK) $(ascii2enUS_scancodeS_LDFLAGS) $(ascii2enUS_scancodeS_OBJECTS) $(ascii2enUS_scancodeS_LDADD) $(LIBS)
createUnitTestFiles$(EXEEXT): $(createUnitTestFiles_OBJECTS) $(createUnitTestFiles_DEPENDENCIES) 
	@rm -f createUnitTestFiles$(EXEEXT)
	$(CXXLINK) $(createUnitTestFiles_LDFLAGS) $(createUnitTestFiles_OBJECTS) $(createUnitTestFiles_LDADD) $(LIBS)
createUnitTestFilesS$(EXEEXT): $(createUnitTestFilesS_OBJECTS) $(createUnitTestFilesS_DEPENDENCIES) 
	@rm -f createUnitTestFilesS$(EXEEXT)
	$(CXXLINK) $(createUnitTestFilesS_LDFLAGS) $(createUnitTestFilesS_OBJECTS) $(createUnitTestFilesS_LDADD) $(LIBS)
dellLEDCtl$(EXEEXT): $(dellLEDCtl_OBJECTS) $(dellLEDCtl_DEPENDENCIES) 
	@rm -f dellLEDCtl$(EXEEXT)
	$(CXXLINK) $(dellLEDCtl_LDFLAGS) $(dellLEDCtl_OBJECTS) $(dellLEDCtl_LDADD) $(LIBS)
dellLEDCtlS$(EXEEXT): $(dellLEDCtlS_OBJECTS) $(dellLEDCtlS_DEPENDENCIES) 
	@rm -f dellLEDCtlS$(EXEEXT)
	$(CXXLINK) $(dellLEDCtlS_LDFLAGS) $(dellLEDCtlS_OBJECTS) $(dellLEDCtlS_LDADD) $(LIBS)
disable_console_redir$(EXEEXT): $(disable_console_redir_OBJECTS) $(disable_console_redir_DEPENDENCIES) 
	@rm -f disable_console_redir$(EXEEXT)
	$(CXXLINK) $(disable_console_redir_LDFLAGS) $(disable_console_redir_OBJECTS) $(disable_console_redir_LDADD) $(LIBS)
disable_console_redirS$(EXEEXT): $(disable_console_redirS_OBJECTS) $(disable_console_redirS_DEPENDENCIES) 
	@rm -f disable_console_redirS$(EXEEXT)
	$(CXXLINK) $(disable_console_redirS_LDFLAGS) $(disable_console_redirS_OBJECTS) $(disable_console_redirS_LDADD) $(LIBS)
dumpCmos$(EXEEXT): $(dumpCmos_OBJECTS) $(dumpCmos_DEPENDENCIES) 
	@rm -f dumpCmos$(EXEEXT)
	$(CXXLINK) $(dumpCmos_LDFLAGS) $(dumpCmos_OBJECTS) $(dumpCmos_LDADD) $(LIBS)
dumpCmosS$(EXEEXT): $(dumpCmosS_OBJECTS) $(dumpCmosS_DEPENDENCIES) 
	@rm -f dumpCmosS$(EXEEXT)
	$(CXXLINK) $(dumpCmosS_LDFLAGS) $(dumpCmosS_OBJECTS) $(dumpCmosS_LDADD) $(LIBS)
getPasswordFormat$(EXEEXT): $(getPasswordFormat_OBJECTS) $(getPasswordFormat_DEPENDENCIES) 
	@rm -f getPasswordFormat$(EXEEXT)
	$(CXXLINK) $(getPasswordFormat_LDFLAGS) $(getPasswordFormat_OBJECTS) $(getPasswordFormat_LDADD) $(LIBS)
getPasswordFormatS$(EXEEXT): $(getPasswordFormatS_OBJECTS) $(getPasswordFormatS_DEPENDENCIES) 
	@rm -f getPasswordFormatS$(EXEEXT)
	$(CXXLINK) $(getPasswordFormatS_LDFLAGS) $(getPasswordFormatS_OBJECTS) $(getPasswordFormatS_LDADD) $(LIBS)
isCmosTokenActive$(EXEEXT): $(isCmosTokenActive_OBJECTS) $(isCmosTokenActive_DEPENDENCIES) 
	@rm -f isCmosTokenActive$(EXEEXT)
	$(CXXLINK) $(isCmosTokenActive_LDFLAGS) $(isCmosTokenActive_OBJECTS) $(isCmosTokenActive_LDADD) $(LIBS)
isCmosTokenActiveS$(EXEEXT): $(isCmosTokenActiveS_OBJECTS) $(isCmosTokenActiveS_DEPENDENCIES) 
	@rm -f isCmosTokenActiveS$(EXEEXT)
	$(CXXLINK) $(isCmosTokenActiveS_LDFLAGS) $(isCmosTokenActiveS_OBJECTS) $(isCmosTokenActiveS_LDADD) $(LIBS)
probes$(EXEEXT): $(probes_OBJECTS) $(probes_DEPENDENCIES) 
	@rm -f probes$(EXEEXT)
	$(CXXLINK) $(probes_LDFLAGS) $(probes_OBJECTS) $(probes_LDADD) $(LIBS)
probesS$(EXEEXT): $(probesS_OBJECTS) $(probesS_DEPENDENCIES) 
	@rm -f probesS$(EXEEXT)
	$(CXXLINK) $(probesS_LDFLAGS) $(probesS_OBJECTS) $(probesS_LDADD) $(LIBS)
smitest$(EXEEXT): $(smitest_OBJECTS) $(smitest_DEPENDENCIES) 
	@rm -f smitest$(EXEEXT)
	$(CXXLINK) $(smitest_LDFLAGS) $(smitest_OBJECTS) $(smitest_LDADD) $(LIBS)
smitestS$(EXEEXT): $(smitestS_OBJECTS) $(smitestS_DEPENDENCIES) 
	@rm -f smitestS$(EXEEXT)
	$(CXXLINK) $(smitestS_LDFLAGS) $(smitestS_OBJECTS) $(smitestS_LDADD) $(LIBS)
stateByteCtl$(EXEEXT): $(stateByteCtl_OBJECTS) $(stateByteCtl_DEPENDENCIES) 
	@rm -f stateByteCtl$(EXEEXT)
	$(CXXLINK) $(stateByteCtl_LDFLAGS) $(stateByteCtl_OBJECTS) $(stateByteCtl_LDADD) $(LIBS)
stateByteCtlS$(EXEEXT): $(stateByteCtlS_OBJECTS) $(stateByteCtlS_DEPENDENCIES) 
	@rm -f stateByteCtlS$(EXEEXT)
	$(CXXLINK) $(stateByteCtlS_LDFLAGS) $(stateByteCtlS_OBJECTS) $(stateByteCtlS_LDADD) $(LIBS)
upBootCtl$(EXEEXT): $(upBootCtl_OBJECTS) $(upBootCtl_DEPENDENCIES) 
	@rm -f upBootCtl$(EXEEXT)
	$(CXXLINK) $(upBootCtl_LDFLAGS) $(upBootCtl_OBJECTS) $(upBootCtl_LDADD) $(LIBS)
upBootCtlS$(EXEEXT): $(upBootCtlS_OBJECTS) $(upBootCtlS_DEPENDENCIES) 
	@rm -f upBootCtlS$(EXEEXT)
	$(CXXLINK) $(upBootCtlS_LDFLAGS) $(upBootCtlS_OBJECTS) $(upBootCtlS_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/activateCmosToken.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ascii2enUS_scancode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/createUnitTestFiles.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dellLEDCtl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/disable_console_redir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dumpCmos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getPasswordFormat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getopts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isCmosTokenActive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/probes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/smitest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stateByteCtl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/upBootCtl.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am


static: $(EXTRA_PROGRAMS)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
