# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = assetTag$(EXEEXT) getSystemId$(EXEEXT) \
	propertyTag$(EXEEXT) serviceTag$(EXEEXT) \
	verifySmiPassword$(EXEEXT) wakeupCtl$(EXEEXT) \
	tokenCtl$(EXEEXT) dellBiosUpdate$(EXEEXT) \
	dellLcdBrightness$(EXEEXT) dumpSmbios$(EXEEXT) \
	dellWirelessCtl$(EXEEXT)
EXTRA_PROGRAMS = assetTagS$(EXEEXT) getSystemIdS$(EXEEXT) \
	propertyTagS$(EXEEXT) serviceTagS$(EXEEXT) \
	verifySmiPasswordS$(EXEEXT) wakeupCtlS$(EXEEXT) \
	tokenCtlS$(EXEEXT) dellBiosUpdateS$(EXEEXT) \
	dellLcdBrightnessS$(EXEEXT) dumpSmbiosS$(EXEEXT) \
	dellWirelessCtlS$(EXEEXT)
subdir = bin-supported
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/build/mkinstalldirs
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_assetTag_OBJECTS = assetTag.$(OBJEXT) getopts.$(OBJEXT)
assetTag_OBJECTS = $(am_assetTag_OBJECTS)
assetTag_LDADD = $(LDADD)
am_assetTagS_OBJECTS = assetTag.$(OBJEXT) getopts.$(OBJEXT)
assetTagS_OBJECTS = $(am_assetTagS_OBJECTS)
assetTagS_LDADD = $(LDADD)
am_dellBiosUpdate_OBJECTS = getopts.$(OBJEXT) dellBiosUpdate.$(OBJEXT)
dellBiosUpdate_OBJECTS = $(am_dellBiosUpdate_OBJECTS)
dellBiosUpdate_LDADD = $(LDADD)
am_dellBiosUpdateS_OBJECTS = getopts.$(OBJEXT) \
	dellBiosUpdate.$(OBJEXT)
dellBiosUpdateS_OBJECTS = $(am_dellBiosUpdateS_OBJECTS)
dellBiosUpdateS_LDADD = $(LDADD)
am_dellLcdBrightness_OBJECTS = getopts.$(OBJEXT) \
	dellLcdBrightness.$(OBJEXT)
dellLcdBrightness_OBJECTS = $(am_dellLcdBrightness_OBJECTS)
dellLcdBrightness_LDADD = $(LDADD)
am_dellLcdBrightnessS_OBJECTS = getopts.$(OBJEXT) \
	dellLcdBrightness.$(OBJEXT)
dellLcdBrightnessS_OBJECTS = $(am_dellLcdBrightnessS_OBJECTS)
dellLcdBrightnessS_LDADD = $(LDADD)
am_dellWirelessCtl_OBJECTS = getopts.$(OBJEXT) \
	dellWirelessCtl.$(OBJEXT)
dellWirelessCtl_OBJECTS = $(am_dellWirelessCtl_OBJECTS)
dellWirelessCtl_LDADD = $(LDADD)
am_dellWirelessCtlS_OBJECTS = getopts.$(OBJEXT) \
	dellWirelessCtl.$(OBJEXT)
dellWirelessCtlS_OBJECTS = $(am_dellWirelessCtlS_OBJECTS)
dellWirelessCtlS_LDADD = $(LDADD)
am_dumpSmbios_OBJECTS = getopts.$(OBJEXT) dumpSmbios.$(OBJEXT)
dumpSmbios_OBJECTS = $(am_dumpSmbios_OBJECTS)
dumpSmbios_LDADD = $(LDADD)
am_dumpSmbiosS_OBJECTS = getopts.$(OBJEXT) dumpSmbios.$(OBJEXT)
dumpSmbiosS_OBJECTS = $(am_dumpSmbiosS_OBJECTS)
dumpSmbiosS_LDADD = $(LDADD)
am_getSystemId_OBJECTS = getSystemId.$(OBJEXT) getopts.$(OBJEXT)
getSystemId_OBJECTS = $(am_getSystemId_OBJECTS)
getSystemId_LDADD = $(LDADD)
am_getSystemIdS_OBJECTS = getSystemId.$(OBJEXT) getopts.$(OBJEXT)
getSystemIdS_OBJECTS = $(am_getSystemIdS_OBJECTS)
getSystemIdS_LDADD = $(LDADD)
am_propertyTag_OBJECTS = getopts.$(OBJEXT) propertyTag.$(OBJEXT)
propertyTag_OBJECTS = $(am_propertyTag_OBJECTS)
propertyTag_LDADD = $(LDADD)
am_propertyTagS_OBJECTS = getopts.$(OBJEXT) propertyTag.$(OBJEXT)
propertyTagS_OBJECTS = $(am_propertyTagS_OBJECTS)
propertyTagS_LDADD = $(LDADD)
am_serviceTag_OBJECTS = getopts.$(OBJEXT) serviceTag.$(OBJEXT)
serviceTag_OBJECTS = $(am_serviceTag_OBJECTS)
serviceTag_LDADD = $(LDADD)
am_serviceTagS_OBJECTS = getopts.$(OBJEXT) serviceTag.$(OBJEXT)
serviceTagS_OBJECTS = $(am_serviceTagS_OBJECTS)
serviceTagS_LDADD = $(LDADD)
am_tokenCtl_OBJECTS = getopts.$(OBJEXT) tokenCtl.$(OBJEXT)
tokenCtl_OBJECTS = $(am_tokenCtl_OBJECTS)
tokenCtl_LDADD = $(LDADD)
am_tokenCtlS_OBJECTS = getopts.$(OBJEXT) tokenCtl.$(OBJEXT)
tokenCtlS_OBJECTS = $(am_tokenCtlS_OBJECTS)
tokenCtlS_LDADD = $(LDADD)
am_verifySmiPassword_OBJECTS = getopts.$(OBJEXT) \
	verifySmiPassword.$(OBJEXT)
verifySmiPassword_OBJECTS = $(am_verifySmiPassword_OBJECTS)
verifySmiPassword_LDADD = $(LDADD)
am_verifySmiPasswordS_OBJECTS = getopts.$(OBJEXT) \
	verifySmiPassword.$(OBJEXT)
verifySmiPasswordS_OBJECTS = $(am_verifySmiPasswordS_OBJECTS)
verifySmiPasswordS_LDADD = $(LDADD)
am_wakeupCtl_OBJECTS = getopts.$(OBJEXT) wakeupCtl.$(OBJEXT)
wakeupCtl_OBJECTS = $(am_wakeupCtl_OBJECTS)
wakeupCtl_LDADD = $(LDADD)
am_wakeupCtlS_OBJECTS = getopts.$(OBJEXT) wakeupCtl.$(OBJEXT)
wakeupCtlS_OBJECTS = $(am_wakeupCtlS_OBJECTS)
wakeupCtlS_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(assetTag_SOURCES) $(assetTagS_SOURCES) \
	$(dellBiosUpdate_SOURCES) $(dellBiosUpdateS_SOURCES) \
	$(dellLcdBrightness_SOURCES) $(dellLcdBrightnessS_SOURCES) \
	$(dellWirelessCtl_SOURCES) $(dellWirelessCtlS_SOURCES) \
	$(dumpSmbios_SOURCES) $(dumpSmbiosS_SOURCES) \
	$(getSystemId_SOURCES) $(getSystemIdS_SOURCES) \
	$(propertyTag_SOURCES) $(propertyTagS_SOURCES) \
	$(serviceTag_SOURCES) $(serviceTagS_SOURCES) \
	$(tokenCtl_SOURCES) $(tokenCtlS_SOURCES) \
	$(verifySmiPassword_SOURCES) $(verifySmiPasswordS_SOURCES) \
	$(wakeupCtl_SOURCES) $(wakeupCtlS_SOURCES)
DIST_SOURCES = $(assetTag_SOURCES) $(assetTagS_SOURCES) \
	$(dellBiosUpdate_SOURCES) $(dellBiosUpdateS_SOURCES) \
	$(dellLcdBrightness_SOURCES) $(dellLcdBrightnessS_SOURCES) \
	$(dellWirelessCtl_SOURCES) $(dellWirelessCtlS_SOURCES) \
	$(dumpSmbios_SOURCES) $(dumpSmbiosS_SOURCES) \
	$(getSystemId_SOURCES) $(getSystemIdS_SOURCES) \
	$(propertyTag_SOURCES) $(propertyTagS_SOURCES) \
	$(serviceTag_SOURCES) $(serviceTagS_SOURCES) \
	$(tokenCtl_SOURCES) $(tokenCtlS_SOURCES) \
	$(verifySmiPassword_SOURCES) $(verifySmiPasswordS_SOURCES) \
	$(wakeupCtl_SOURCES) $(wakeupCtlS_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPPUNIT_CFLAGS = @CPPUNIT_CFLAGS@
CPPUNIT_CONFIG = @CPPUNIT_CONFIG@
CPPUNIT_LIBS = @CPPUNIT_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
HAS_DOT_FALSE = @HAS_DOT_FALSE@
HAS_DOT_TRUE = @HAS_DOT_TRUE@
HAS_DOXYGEN_FALSE = @HAS_DOXYGEN_FALSE@
HAS_DOXYGEN_TRUE = @HAS_DOXYGEN_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
CLEANFILES = $(EXTRA_PROGRAMS)
AM_LDFLAGS = -L@top_builddir@/libraries/ -lsmbios
INCLUDES = -I@top_builddir@/include -I@top_builddir@/libraries/common -I@top_srcdir@/include -I@top_srcdir@/libraries/common 
EXTRA_DIST = getopts.h
assetTag_SOURCES = assetTag.cpp getopts.c
getSystemId_SOURCES = getSystemId.cpp getopts.c
propertyTag_SOURCES = getopts.c propertyTag.cpp
serviceTag_SOURCES = getopts.c serviceTag.cpp
verifySmiPassword_SOURCES = getopts.c verifySmiPassword.cpp
wakeupCtl_SOURCES = getopts.c wakeupCtl.cpp
tokenCtl_SOURCES = getopts.c tokenCtl.cpp
dellBiosUpdate_SOURCES = getopts.c dellBiosUpdate.cpp
dellLcdBrightness_SOURCES = getopts.c dellLcdBrightness.cpp
dellWirelessCtl_SOURCES = getopts.c dellWirelessCtl.cpp

#libsmbiosxml progs
dumpSmbios_SOURCES = getopts.c dumpSmbios.cpp
dumpSmbios_LDFLAGS = -lsmbiosxml
dumpSmbios_DEPENDENCIES = @top_builddir@/libraries/libsmbiosxml.la

#static versions
assetTagS_SOURCES = assetTag.cpp getopts.c
getSystemIdS_SOURCES = getSystemId.cpp getopts.c
propertyTagS_SOURCES = getopts.c propertyTag.cpp
serviceTagS_SOURCES = getopts.c serviceTag.cpp
verifySmiPasswordS_SOURCES = getopts.c verifySmiPassword.cpp
wakeupCtlS_SOURCES = getopts.c wakeupCtl.cpp
tokenCtlS_SOURCES = getopts.c tokenCtl.cpp
dellBiosUpdateS_SOURCES = getopts.c dellBiosUpdate.cpp
dellLcdBrightnessS_SOURCES = getopts.c dellLcdBrightness.cpp
dellWirelessCtlS_SOURCES = getopts.c dellWirelessCtl.cpp

#libsmbiosxml progs
dumpSmbiosS_SOURCES = getopts.c dumpSmbios.cpp
dumpSmbiosS_LDFLAGS = -lsmbiosxml -all-static
dumpSmbiosS_DEPENDENCIES = @top_builddir@/libraries/libsmbiosxml.la
assetTagS_LDFLAGS = -all-static
getSystemIdS_LDFLAGS = -all-static
propertyTagS_LDFLAGS = -all-static
serviceTagS_LDFLAGS = -all-static
verifySmiPasswordS_LDFLAGS = -all-static
wakeupCtlS_LDFLAGS = -all-static
tokenCtlS_LDFLAGS = -all-static
dellBiosUpdateS_LDFLAGS = -all-static
dellLcdBrightnessS_LDFLAGS = -all-static
dellWirelessCtlS_LDFLAGS = -all-static
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  bin-supported/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  bin-supported/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
assetTag$(EXEEXT): $(assetTag_OBJECTS) $(assetTag_DEPENDENCIES) 
	@rm -f assetTag$(EXEEXT)
	$(CXXLINK) $(assetTag_LDFLAGS) $(assetTag_OBJECTS) $(assetTag_LDADD) $(LIBS)
assetTagS$(EXEEXT): $(assetTagS_OBJECTS) $(assetTagS_DEPENDENCIES) 
	@rm -f assetTagS$(EXEEXT)
	$(CXXLINK) $(assetTagS_LDFLAGS) $(assetTagS_OBJECTS) $(assetTagS_LDADD) $(LIBS)
dellBiosUpdate$(EXEEXT): $(dellBiosUpdate_OBJECTS) $(dellBiosUpdate_DEPENDENCIES) 
	@rm -f dellBiosUpdate$(EXEEXT)
	$(CXXLINK) $(dellBiosUpdate_LDFLAGS) $(dellBiosUpdate_OBJECTS) $(dellBiosUpdate_LDADD) $(LIBS)
dellBiosUpdateS$(EXEEXT): $(dellBiosUpdateS_OBJECTS) $(dellBiosUpdateS_DEPENDENCIES) 
	@rm -f dellBiosUpdateS$(EXEEXT)
	$(CXXLINK) $(dellBiosUpdateS_LDFLAGS) $(dellBiosUpdateS_OBJECTS) $(dellBiosUpdateS_LDADD) $(LIBS)
dellLcdBrightness$(EXEEXT): $(dellLcdBrightness_OBJECTS) $(dellLcdBrightness_DEPENDENCIES) 
	@rm -f dellLcdBrightness$(EXEEXT)
	$(CXXLINK) $(dellLcdBrightness_LDFLAGS) $(dellLcdBrightness_OBJECTS) $(dellLcdBrightness_LDADD) $(LIBS)
dellLcdBrightnessS$(EXEEXT): $(dellLcdBrightnessS_OBJECTS) $(dellLcdBrightnessS_DEPENDENCIES) 
	@rm -f dellLcdBrightnessS$(EXEEXT)
	$(CXXLINK) $(dellLcdBrightnessS_LDFLAGS) $(dellLcdBrightnessS_OBJECTS) $(dellLcdBrightnessS_LDADD) $(LIBS)
dellWirelessCtl$(EXEEXT): $(dellWirelessCtl_OBJECTS) $(dellWirelessCtl_DEPENDENCIES) 
	@rm -f dellWirelessCtl$(EXEEXT)
	$(CXXLINK) $(dellWirelessCtl_LDFLAGS) $(dellWirelessCtl_OBJECTS) $(dellWirelessCtl_LDADD) $(LIBS)
dellWirelessCtlS$(EXEEXT): $(dellWirelessCtlS_OBJECTS) $(dellWirelessCtlS_DEPENDENCIES) 
	@rm -f dellWirelessCtlS$(EXEEXT)
	$(CXXLINK) $(dellWirelessCtlS_LDFLAGS) $(dellWirelessCtlS_OBJECTS) $(dellWirelessCtlS_LDADD) $(LIBS)
dumpSmbios$(EXEEXT): $(dumpSmbios_OBJECTS) $(dumpSmbios_DEPENDENCIES) 
	@rm -f dumpSmbios$(EXEEXT)
	$(CXXLINK) $(dumpSmbios_LDFLAGS) $(dumpSmbios_OBJECTS) $(dumpSmbios_LDADD) $(LIBS)
dumpSmbiosS$(EXEEXT): $(dumpSmbiosS_OBJECTS) $(dumpSmbiosS_DEPENDENCIES) 
	@rm -f dumpSmbiosS$(EXEEXT)
	$(CXXLINK) $(dumpSmbiosS_LDFLAGS) $(dumpSmbiosS_OBJECTS) $(dumpSmbiosS_LDADD) $(LIBS)
getSystemId$(EXEEXT): $(getSystemId_OBJECTS) $(getSystemId_DEPENDENCIES) 
	@rm -f getSystemId$(EXEEXT)
	$(CXXLINK) $(getSystemId_LDFLAGS) $(getSystemId_OBJECTS) $(getSystemId_LDADD) $(LIBS)
getSystemIdS$(EXEEXT): $(getSystemIdS_OBJECTS) $(getSystemIdS_DEPENDENCIES) 
	@rm -f getSystemIdS$(EXEEXT)
	$(CXXLINK) $(getSystemIdS_LDFLAGS) $(getSystemIdS_OBJECTS) $(getSystemIdS_LDADD) $(LIBS)
propertyTag$(EXEEXT): $(propertyTag_OBJECTS) $(propertyTag_DEPENDENCIES) 
	@rm -f propertyTag$(EXEEXT)
	$(CXXLINK) $(propertyTag_LDFLAGS) $(propertyTag_OBJECTS) $(propertyTag_LDADD) $(LIBS)
propertyTagS$(EXEEXT): $(propertyTagS_OBJECTS) $(propertyTagS_DEPENDENCIES) 
	@rm -f propertyTagS$(EXEEXT)
	$(CXXLINK) $(propertyTagS_LDFLAGS) $(propertyTagS_OBJECTS) $(propertyTagS_LDADD) $(LIBS)
serviceTag$(EXEEXT): $(serviceTag_OBJECTS) $(serviceTag_DEPENDENCIES) 
	@rm -f serviceTag$(EXEEXT)
	$(CXXLINK) $(serviceTag_LDFLAGS) $(serviceTag_OBJECTS) $(serviceTag_LDADD) $(LIBS)
serviceTagS$(EXEEXT): $(serviceTagS_OBJECTS) $(serviceTagS_DEPENDENCIES) 
	@rm -f serviceTagS$(EXEEXT)
	$(CXXLINK) $(serviceTagS_LDFLAGS) $(serviceTagS_OBJECTS) $(serviceTagS_LDADD) $(LIBS)
tokenCtl$(EXEEXT): $(tokenCtl_OBJECTS) $(tokenCtl_DEPENDENCIES) 
	@rm -f tokenCtl$(EXEEXT)
	$(CXXLINK) $(tokenCtl_LDFLAGS) $(tokenCtl_OBJECTS) $(tokenCtl_LDADD) $(LIBS)
tokenCtlS$(EXEEXT): $(tokenCtlS_OBJECTS) $(tokenCtlS_DEPENDENCIES) 
	@rm -f tokenCtlS$(EXEEXT)
	$(CXXLINK) $(tokenCtlS_LDFLAGS) $(tokenCtlS_OBJECTS) $(tokenCtlS_LDADD) $(LIBS)
verifySmiPassword$(EXEEXT): $(verifySmiPassword_OBJECTS) $(verifySmiPassword_DEPENDENCIES) 
	@rm -f verifySmiPassword$(EXEEXT)
	$(CXXLINK) $(verifySmiPassword_LDFLAGS) $(verifySmiPassword_OBJECTS) $(verifySmiPassword_LDADD) $(LIBS)
verifySmiPasswordS$(EXEEXT): $(verifySmiPasswordS_OBJECTS) $(verifySmiPasswordS_DEPENDENCIES) 
	@rm -f verifySmiPasswordS$(EXEEXT)
	$(CXXLINK) $(verifySmiPasswordS_LDFLAGS) $(verifySmiPasswordS_OBJECTS) $(verifySmiPasswordS_LDADD) $(LIBS)
wakeupCtl$(EXEEXT): $(wakeupCtl_OBJECTS) $(wakeupCtl_DEPENDENCIES) 
	@rm -f wakeupCtl$(EXEEXT)
	$(CXXLINK) $(wakeupCtl_LDFLAGS) $(wakeupCtl_OBJECTS) $(wakeupCtl_LDADD) $(LIBS)
wakeupCtlS$(EXEEXT): $(wakeupCtlS_OBJECTS) $(wakeupCtlS_DEPENDENCIES) 
	@rm -f wakeupCtlS$(EXEEXT)
	$(CXXLINK) $(wakeupCtlS_LDFLAGS) $(wakeupCtlS_OBJECTS) $(wakeupCtlS_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assetTag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dellBiosUpdate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dellLcdBrightness.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dellWirelessCtl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dumpSmbios.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getSystemId.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getopts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/propertyTag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serviceTag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tokenCtl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/verifySmiPassword.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wakeupCtl.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am


static: $(EXTRA_PROGRAMS)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
