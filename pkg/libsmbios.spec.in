# these are all substituted by autoconf
%define major @RELEASE_MAJOR@
%define minor @RELEASE_MINOR@
%define sub @RELEASE_SUBLEVEL@
%define extralevel @RELEASE_RPM_EXTRALEVEL@
%define release_version %{major}.%{minor}.%{sub}%{extralevel}

%define package_name  libsmbios2

# required by suse build system
# norootforbuild

%define cppunit_BR cppunit-devel
%define doxygen_BR %{nil}
%define valgrind_BR %{nil}
# Some variable definitions so that we can be compatible between SUSE Build service and Fedora build system
# SUSE: fedora_version  suse_version rhel_version centos_version sles_version
# Fedora: fedora dist fc8 fc9
%if 0%{?fedora_version} || 0%{?fedora}
    %define doxygen_BR doxygen
%endif

# no doxygen in most suse versions base
%if 0%{?suse_version}
    %define valgrind_BR valgrind
%endif

%if 0%{?sles_version}
    %define valgrind_BR valgrind
%endif

%if 0%{?rhel_version}
    %define doxygen_BR doxygen
%endif

%if 0%{?centos_version}
    %define doxygen_BR doxygen
%endif

# per fedora python packaging guidelines
%{!?python_sitelib: %define python_sitelib %(%{__python} -c "from distutils.sysconfig import get_python_lib; print get_python_lib()")}

Name: %{package_name}
Version: %{release_version}
Release: 1%{?dist}
License: GPLv2+ or OSL 2.1
Summary: Libsmbios C/C++ shared libraries
Group: System Environment/Libraries
Source: http://linux.dell.com/libsmbios/download/libsmbios/libsmbios-%{version}/libsmbios-%{version}.tar.gz
URL: http://linux.dell.com/libsmbios/main
Buildroot: %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
BuildRequires: libxml2-devel python-devel
#BuildRequires: %{valgrind_BR}
BuildRequires: gcc-c++, gettext, %{doxygen_BR}, %{cppunit_BR}
Provides: libsmbios = 0:%{version}-%{release}
Provides: libsmbios-libs = 0:%{version}-%{release}
# uncomment for official fedora
#Obsoletes: libsmbios-libs < 2.0.0

# libsmbios only ever makes sense on intel compatible arches
# no DMI tables on ppc, s390, etc.
ExclusiveArch: x86_64 ia64 %{ix86}

%description
Libsmbios is a library and utilities that can be used by client programs to get
information from standard BIOS tables, such as the SMBIOS table.

This package provides the C-based libsmbios library, with a C interface.

This package also has a C++-based library, with a C++ interface. It is not
actively maintained, but provided for backwards compatibility. New programs
should use the libsmbios C interface.


%package -n python-smbios
Summary: Python interface to Libsmbios C library
Group: System Environment/Libraries
Requires: %{package_name} = %{version}-%{release}
Requires: python

%description -n python-smbios
This package provides a Python interface to libsmbios


%package -n smbios-utils
Summary: Utilities that use libsmbios
Group: Applications/System
Requires: python-smbios = %{version}-%{release}
Requires: %{package_name} = %{version}-%{release}
Obsoletes: libsmbios-bin < 0:2.0.0
Provides: libsmbios-bin = %{version}-%{release}
Obsoletes: libsmbios-unsupported-bin < 0:2.0.0
Provides: libsmbios-unsupported-bin = %{version}-%{release}

%package -n libsmbios-devel
Summary: Development headers and archives
Group: Development/Libraries
Requires: libsmbios = %{version}-%{release}

%description -n libsmbios-devel
Libsmbios is a library and utilities that can be used by client programs to get
information from standard BIOS tables, such as the SMBIOS table.

This package contains the headers and .a files necessary to compile new client
programs against libsmbios.


%description -n smbios-utils
Libsmbios is a library and utilities that can be used by client programs
to get information from standard BIOS tables, such as the SMBIOS table.

This package contains some sample binaries that use libsmbios.

%prep
%setup -q -n libsmbios-%{version}
find . -type d -exec chmod -f 755 {} \;
find doc src -type f -exec chmod -f 644 {} \;
chmod 755 src/cppunit/*.sh

%build
# this line lets us build an RPM directly from a git tarball
[ -e ./configure ] || ./autogen.sh

export CXXFLAGS="%{optflags}"
export CFLAGS="%{optflags}"
export RELEASE_MAJOR=%{major}
export RELEASE_MINOR=%{minor}
export RELEASE_SUBLEVEL=%{sub}
export RELEASE_EXTRALEVEL=%{extralevel}
%configure
mkdir -p out/libsmbios_c
mkdir -p out/libsmbios_c++
make -e %{?_smp_mflags}

%check
#if [ -e /usr/bin/valgrind -a -d /usr/include/cppunit ]; then
#    make -e valgrind
#elif [ -d /usr/include/cppunit ]; then
#    make -e check
#else
#    echo "Unit tests skipped due to missing cppunit."
#fi

%install
rm -rf %{buildroot}
mkdir %{buildroot}

make install DESTDIR=%{buildroot} INSTALL="%{__install} -p"
mkdir -p %{buildroot}/usr/include
cp -a src/include/*  %{buildroot}/usr/include/
rm -f %{buildroot}/%{_libdir}/lib*.la
find %{buildroot}/usr/include -exec touch -r configure.ac {} \;

# backwards compatible:
ln -s ../sbin/dellWirelessCtl %{buildroot}/usr/bin/dellWirelessCtl

%find_lang libsmbios


%clean
rm -rf %{buildroot}

%post   -n %{package_name}   -p /sbin/ldconfig
%postun -n %{package_name}   -p /sbin/ldconfig

%files -n %{package_name} -f libsmbios.lang
%defattr(-,root,root,-)
%{_libdir}/libsmbios_c.so.*
%{_libdir}/libsmbios.so.*

%files -n python-smbios
%defattr(-,root,root,-)
%doc COPYING-GPL COPYING-OSL README
%{python_sitelib}/*

%files -n libsmbios-devel
%defattr(-,root,root,-)
%doc COPYING-GPL COPYING-OSL README src/bin/getopts_LICENSE.txt src/include/smbios/config/boost_LICENSE_1_0_txt
/usr/include/smbios
/usr/include/smbios_c
%{_libdir}/libsmbios.a
%{_libdir}/libsmbios.so
%{_libdir}/libsmbios_c.a
%{_libdir}/libsmbios_c.so
%doc out/libsmbios_c++
%doc out/libsmbios_c

%files -n smbios-utils
%defattr(-,root,root,-)
%doc COPYING-GPL COPYING-OSL README
%doc src/bin/getopts_LICENSE.txt src/include/smbios/config/boost_LICENSE_1_0_txt
%doc doc/pkgheader.sh
%{_sbindir}/assetTag
%{_sbindir}/dellBiosUpdate
%{_sbindir}/getSystemId
%{_sbindir}/propertyTag
%{_sbindir}/serviceTag
%{_sbindir}/verifySmiPassword
%{_sbindir}/wakeupCtl
%{_sbindir}/dellLcdBrightness
%{_sbindir}/mkbiospkg.sh
%{_sbindir}/dellLEDCtl
%{_sbindir}/activateCmosToken
%{_sbindir}/getPasswordFormat
%{_sbindir}/isCmosTokenActive
%{_sbindir}/stateByteCtl
%{_sbindir}/upBootCtl
%{_sbindir}/smbios_cmos_save_to_file

# used by HAL in old location, so keep it around until HAL is updated.
%{_sbindir}/dellWirelessCtl
# this is a symlink to the above...
%{_bindir}/dellWirelessCtl

%ifnarch ia64
%{_sbindir}/dellMediaDirectCtl
%endif

# python utilities
%{_sbindir}/tokenCtl
%{_datadir}/smbios-utils

%changelog
* Tue Oct 28 2008 Michael E Brown <michael_e_brown at dell.com> - 2.2.0-1
- Spec updates
