#!/usr/bin/python
# vim:expandtab:autoindent:tabstop=4:shiftwidth=4:filetype=python:tw=0

  #############################################################################
  #
  # Copyright (c) 2005 Dell Computer Corporation
  # Dual Licenced under GNU GPL and OSL
  #
  #############################################################################
"""dumpCmos"""

from __future__ import generators

# import arranged alphabetically
import gettext
import locale
import os
import sys
import traceback

# the following vars are all substituted on install
# this bin isnt byte-compiled, so this is ok
RELEASE_VERSION="uninstalled-version"
GETTEXT_PACKAGE="libsmbios" #replaced
pythondir=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])), "..", "python")
localedir=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])), "..", "..", "po")
clidir=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])), "..", "py-cli")
# end vars

# import all local modules after this.
sys.path.insert(0,pythondir)
sys.path.insert(0,clidir)
__VERSION__=RELEASE_VERSION

import cli
import libsmbios_c.smi as smi

locale.setlocale(locale.LC_ALL, '')
gettext.install(GETTEXT_PACKAGE, localedir, unicode=1)

class CmdlineError(Exception): pass

def command_parse():
    parser = cli.getStdOptionParser(usage=__doc__, version=__VERSION__)
    return parser.parse_args()

def main():
    exit_code = 0
    (options, args) = command_parse()
    cli.setup_std_options(options)

    # first check we can actuall run SMIs (perms, etc)
    s = smi.DellSmi()  # we dont actually do anything with this

    format_strings = ( 
        ("DELL_SMI_PASSWORD_FMT_SCANCODE", _("Keyboard Scancodes")),
        ("DELL_SMI_PASSWORD_FMT_ASCII", _("ASCII")),
        )

    for label, tag in ( 
            (_("User password"), "DELL_SMI_PASSWORD_USER"), 
            (_("Admin password"), "DELL_SMI_PASSWORD_ADMIN"), 
            (_("Owner password"), "DELL_SMI_PASSWORD_OWNER")):
        whichpass = getattr(smi, tag)
        sys.stdout.write("%s\n" % label)
        fmt = smi.password_format(whichpass)
        for i in format_strings:
            if fmt == getattr(smi, i[0]):
                sys.stdout.write("\tPassword stored as: %s\n" % i[1])

        sys.stdout.write("\tPassword MAX length: %s\n" % smi.password_max_len(whichpass))

        passToTry = options.password_ascii
        if fmt == smi.DELL_SMI_PASSWORD_FMT_SCANCODE:
            passToTry = options.password_scancode

        if smi.is_password_present(whichpass):
            sys.stdout.write("\tinstalled\n");
        else:
            sys.stdout.write("\tNOT installed\n");
            continue

        if smi.password_verify(whichpass, passToTry):
            sys.stdout.write("\tPassword entered MATCHED\n")
        else:
            sys.stdout.write("\tPassword did not match\n")
        
    return exit_code

if __name__ == "__main__":
    sys.exit( main() )

