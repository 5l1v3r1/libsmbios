#!/usr/bin/python
# vim:expandtab:autoindent:tabstop=4:shiftwidth=4:filetype=python:tw=0

  #############################################################################
  #
  # Copyright (c) 2005 Dell Computer Corporation
  # Dual Licenced under GNU GPL and OSL
  #
  #############################################################################
"""dumpCmos"""

from __future__ import generators

# import arranged alphabetically
import gettext
import locale
import os
import sys
import traceback

# the following vars are all substituted on install
# this bin isnt byte-compiled, so this is ok
RELEASE_VERSION="uninstalled-version"
GETTEXT_PACKAGE="libsmbios" #replaced
pythondir=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])), "..", "python")
localedir=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])), "..", "..", "po")
clidir=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])), "..", "py-cli")
# end vars

# import all local modules after this.
sys.path.insert(0,pythondir)
sys.path.insert(0,clidir)
__VERSION__=RELEASE_VERSION

import cli
from libsmbios_c.system_info import *
import libsmbios_c.smbios as smbios

locale.setlocale(locale.LC_ALL, '')
gettext.install(GETTEXT_PACKAGE, localedir, unicode=1)

class CmdlineError(Exception): pass

def command_parse():
    parser = cli.getStdOptionParser(usage=__doc__, version=__VERSION__)
    return parser.parse_args()

def main():
    exit_code = 0
    (options, args) = command_parse()
    cli.setup_std_options(options)

    #instantiate smbios table to ensure we have good perms, etc
    s = smbios.SmbiosTable()

    exitRet = 0
    def pr(s, f):
        try:
            ret = f()
        except Exception, e:
            exitRet=1
            ret = str(e)
            print "Error getting the",

        print s % ret

    pr("Libsmbios:    %s", get_library_version_string)

    try:
        sysid = "0x%04X" % get_dell_system_id()
    except Exception, e:
        exitRet=1
        print "Error getting the",
        sysid = str(e)
    print "System ID:    %s" % sysid
        
    pr("Service Tag:  %s", get_service_tag)
    pr("Asset Tag:    %s", get_asset_tag)

    try:
        esc = int(get_service_tag(), 36)
    except Exception, e:
        esc = str(e)
        print "Error getting the",

    print "Express Service Code: %s" % esc
    pr("Product Name: %s", get_system_name)
    pr("BIOS Version: %s", get_bios_version)
    pr("Vendor:       %s", get_vendor_name)
    pr("Property Ownership Tag: %s", get_property_ownership_tag)

    return exit_code

if __name__ == "__main__":
    sys.exit( main() )

